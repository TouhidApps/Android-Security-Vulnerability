#include <cstring>
#include <jni.h>
#include <ctime>
#include <sys/stat.h>
#include <cstdio>
#include <android/log.h>
#include <cerrno>
#include <unistd.h>
#include <sys/system_properties.h>
#include <string>


const char *ANDROID_OS_BUILD_TAGS = "log_from_jni";

extern "C" JNIEXPORT int JNICALL
Java_com_touhidapps_rootchecker_MainActivity_checkRootAccessMethod1(JNIEnv *env, jobject thiz) {

    //Access function checks whether a particular file can be accessed
    int result = access("/system/app/Superuser.apk", F_OK);
    __android_log_print(ANDROID_LOG_VERBOSE, "File Access Result ", "%d\n", result);
    int len;
    char build_tags[PROP_VALUE_MAX]; // PROP_VALUE_MAX from <sys/system_properties.h>.
    len = __system_property_get(ANDROID_OS_BUILD_TAGS, build_tags); // On return, len will equal (int)strlen(model_id).
    if (strcmp(build_tags, "test-keys") == 0) {
        __android_log_print(ANDROID_LOG_VERBOSE, "Device has test keys ", "\n", build_tags);
        result = 0;
    }
    __android_log_print(ANDROID_LOG_VERBOSE, "File Access Result ", "%s\n", build_tags);
    return result;

} // checkRootAccessMethod1

extern "C" JNIEXPORT int JNICALL
Java_com_touhidapps_rootchecker_MainActivity_checkRootAccessMethod2(JNIEnv *env, jobject thiz) {
    //which command is enabled only after Busy box is installed on a rooted device
    //Out put of which command is the path to su file. On a non rooted device , we will get a null/ empty path
    //char* cmd = const_cast<char *>"which su";
    FILE *pipe = popen("which su", "r");
    if (!pipe) return -1;
    char buffer[128];
    std::string resultCmd = "";
    while (!feof(pipe)) {
        if (fgets(buffer, 128, pipe) != NULL)
            resultCmd += buffer;
    }
    pclose(pipe);

    const char *cstr = resultCmd.c_str();
    int result = -1;
    if (cstr == NULL || (strlen(cstr) == 0)) {
        __android_log_print(ANDROID_LOG_VERBOSE, "Result of Which command is Null", "");
    } else {
        result = 0;
        __android_log_print(ANDROID_LOG_VERBOSE, "Result of Which command", "%s\n", cstr);
    }
    return result;

} // checkRootAccessMethod2

extern "C" JNIEXPORT int JNICALL
Java_com_touhidapps_rootchecker_MainActivity_checkRootAccessMethod3(JNIEnv *env, jobject thiz) {

    int len;
    char build_tags[PROP_VALUE_MAX]; // PROP_VALUE_MAX from <sys/system_properties.h>.
    int result = -1;
    len = __system_property_get(ANDROID_OS_BUILD_TAGS, build_tags); // On return, len will equal (int)strlen(model_id).
    if (len > 0 && strstr(build_tags, "test-keys") != NULL) {
        __android_log_print(ANDROID_LOG_VERBOSE, "Device has test keys", "%s\n", build_tags);
        result = 0;
    }

    return result;

} // checkRootAccessMethod3